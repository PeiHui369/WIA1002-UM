For example,

82/ will evaluate to 4 (8/2)
 
138*+ will evaluate to 25 (1+8*3)
 
545*+5/ will evaluate to 5 ((5+4*5)/5)
Assume that the postfix expression contains only single-digit numeric operands, without any whitespace.

We can easily compute a postfix expression by using a stack. The idea is to traverse the given postfix expression from left to right. If the current character of the expression is an operand, push it into the stack; otherwise, if the current character is an operator, pop the top two elements from the stack, evaluate them using the current operator and push the result back into the stack. When all the expression characters are processed, we will be left with only one element in the stack containing the value of a postfix expression.

---------------------------------------------
import java.util.Stack;
 
class Main
{
    // Function to evaluate a given postfix expression
    public static int evalPostfix(String exp)
    {
        // base case
        if (exp == null || exp.length() == 0) {
            System.exit(-1);
        }
 
        // create an empty stack
        Stack<Integer> stack = new Stack<>();
 
        // traverse the given expression
        for (char c: exp.toCharArray())
        {
            // if the current character is an operand, push it into the stack
            if (Character.isDigit(c)) {
                stack.push(c - '0');
            }
            // if the current character is an operator
            else {
                // remove the top two elements from the stack
                int x = stack.pop();
                int y = stack.pop();
 
                // evaluate the expression 'x op y', and push the
                // result back to the stack
                if (c == '+') {
                    stack.push(y + x);
                }
                else if (c == '-') {
                    stack.push(y - x);
                }
                else if (c == '*') {
                    stack.push(y * x);
                }
                else if (c == '/') {
                    stack.push(y / x);
                }
            }
        }
 
        // At this point, the stack is left with only one element, i.e.,
        // expression result
        return stack.pop();
    }
 
    public static void main(String[] args)
    {
        String exp = "138*+";
        System.out.println(evalPostfix(exp));
    }
}
Download  Run Code

Output:

25
