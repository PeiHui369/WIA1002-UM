L2Q1
public class MyGeneric<E>{
  private E e;
  
  MyGeneric(){}
  
  MyGeneric(E e){
    this.e = e;
  }
  
  public void set (E e){
    this.e = e;
  }
  
  public E get(){
    return e;
  }
  
  public static void main(String[] args){
    MyGeneric<String> strObj = new MyGeneric<>();
    MyGeneric<Integer> intObj = new MyGeneric<>();
    strObj.set("Java");
    intObj.set(123);
    System.out.println(strObj.get());
    System.out.println(intObj.get());
  }
}

L2Q2
import java.util.*;
public class MyArray{
  public static void main(String[] args){
    System.out.println(CompareMax.maximum(1,2,3));
  }
}

class compareMax{
  public static <T extends Comparable<T>> T maximum (T a, T b, T c){
  //a is the maximum
  T max = a;
  
  if(b.compareTo(max) > 0){
    max = b;
  }
  
  if(c.compareTo(max) > 0){
    max = c;
  }
  
  return max;
}

L2Q3
import java.util.*;

public class StorePairGeneric<T extends Comparable<T>> implements Comparable<StorePairGeneric<T>>{
  private T first,second;
  
  public StorePairGeneric(T first, T second){
    this.first = first;
    this.second = second;
  }
  
  public T getFirst(){
    return first;
  }
  
  public T getSecond(){
    return second;
  }
  
  public void setPair(T first, T second){
    this.first = first;
    this.second = second;
  }
  
  public String toString(){
    return "first = " + first + "second = " + second;
  }
  
  @Override
  public boolean equals (Object o){
    StorePairGeneric<E> other = (StorePairGeneric<E>) o;
    return this.first.equals(other.first);
  }
  
  @Override
  public int compareTo(StorePairGeneric<E> o){
    return this.first.compareTo(o.first);
  }
  
  public static void main(String[] args){
    StorePairGeneric<Integer> a = new StorePairGeneric<>(6,4);
    StorePairGeneric<Integer> b = new StorePairGeneric<>(2,2);
    StorePairGeneric<Integer> c = new StorePairGeneric<>(6,3);    
    
    System.out.println("a = " + a);
    System.out.println("b = " + b);
    System.out.println("c = " + c);
  
    System.out.println("a.equals(b): " +a.equals(b));
    System.out.println("a.equals(c): " +a.equals(c));
    System.out.println("b.equals(b): " +b.equals(c));
    System.out.println("a.compareTo(b): " +a.compareTo(b));
    System.out.println("a.compareTo(c): " +a.compareTo(c));
    System.out.println("b.compareTo(c): " +b.compareTo(c));
  }
}
 
L2Q4
public class question4<T extends Comparable<T>>{
  public static <T extends Comparable<T>>
    
