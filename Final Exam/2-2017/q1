1.	Tulis sebuah program untuk membina kelas senarai berpaut (tunggal) yang dipanggil LinkedList, di mana contoh output untuk program ujian anda adalah seperti berikut:

Write a program to create a (singly) linked list usinp a class called LinkedList, where an example of the output for the test program is as follows:

Displaying the Linked List *"”*""***"*””**””*’******”**”*”“** Louis Vuitton 10,000, 000 Sold
Chanel: 100, 000,000 Sold
Prada: 1,000,000 Sold
Tods: 500,000,000 Sold

Adding Coach after Chanel
Found Chanel which is handbag number 2 in the linked list
Displaying the Linked List °	*** Louis Vuitton: 10,000,000 Sold Chanel: 100,000,000 Sold
Coach: 10,000,000 Sold
Prada: 1.000,000 Sold
Tods: 500,000,000 Sold
Adding Mulberry after Coach
Found Coach which is handbag number 3 in the linked list

Displaying the Linked List ’"““”“*“"“““““ """"*”“"* Louis Vuitton: 10,000, 000 Sold
Chanel: 100,000,000 Sold
Coach: 10,000, 000 Sold
Mulberry: 90,000,000 Sold
Prada: 1, 000, 000 Sold
Gods: 500,000,000 So/d

Removing Chanel..
Found a match.. Chanel is hand bag number 2 in the linked list

Displaying the Linked List - Louis Vuitton: 10,000,000 Sold Coach: 10,000, 000 Sold
Mulberry: 90,000,000 Sold
Prada: 1, 000, 000 Sold
Tods: 500,000,000 Sold
Removing Coach.
Found a match.. Coach is handbag number 2 in the linked list

Displaying the Linked List ““““““*““"*”"*“”*”””*””*‘““***“ Louis Vuitton. 10,000,000 Sold
Mulberry: 90,000,000 Sold
Prada: 1,000,D00 Sold
Tods: 500,000,000 Sold

BUILD SUCCESSFUL (total time: 0 seconds)
Program anda perlu mempunyai metod-metod berikut:

Your program requires the following methods:

i)	Metod insedFirstLink(String, int) untuk memasukkan elemen baru ke dalam senarai berpaut.

Method inserfFirstLink(String, int) lo insert a new e/ement into the linked list.

(2 markah/marks)

ii)	Metod addAfter(String, String, int) untuk memasukkan elemen baru selepas elemen tertentu dalam senarai berpaut tersebut.

Method addAfter(String, String, int) to insert a new element after a particular element in the linked //st.

(4 markah/marks)

iii)	Metod removeLink(String) untuk membuang mana-mana elemen di dalam senarai berpaut tersebut.

Method removeLink(String) to delete any element in the linked list.

(4 markah/maps)

iv)	Metod display() untuk memaparkan kesemua kandungan dalam senarai berpaut tersebut.

Method display() to display all of the contents of the linked /isf.

(2 markah/mats)
================================================================================================================

Here's the program to create the `LinkedList` class and implement the required methods:

```python
class Node:
    def __init__(self, brand, sold):
        self.brand = brand
        self.sold = sold
        self.next = None


class LinkedList:
    def __init__(self):
        self.head = None

    def insert_first_link(self, brand, sold):
        new_node = Node(brand, sold)
        new_node.next = self.head
        self.head = new_node

    def add_after(self, target_brand, brand, sold):
        if self.head is None:
            print("Linked list is empty.")
            return

        current = self.head
        while current:
            if current.brand == target_brand:
                new_node = Node(brand, sold)
                new_node.next = current.next
                current.next = new_node
                return
            current = current.next

        print(f"Element {target_brand} not found in the linked list.")

    def remove_link(self, brand):
        if self.head is None:
            print("Linked list is empty.")
            return

        if self.head.brand == brand:
            self.head = self.head.next
            return

        current = self.head
        previous = None
        while current:
            if current.brand == brand:
                previous.next = current.next
                return
            previous = current
            current = current.next

        print(f"Element {brand} not found in the linked list.")

    def display(self):
        if self.head is None:
            print("Linked list is empty.")
            return

        current = self.head
        while current:
            print(f"{current.brand}: {current.sold} Sold")
            current = current.next
        print()


# Test the implementation
linked_list = LinkedList()
linked_list.insert_first_link("Louis Vuitton", "10,000,000")
linked_list.insert_first_link("Chanel", "100,000,000")
linked_list.insert_first_link("Prada", "1,000,000")
linked_list.insert_first_link("Tods", "500,000,000")
linked_list.display()

linked_list.add_after("Chanel", "Coach", "10,000,000")
linked_list.display()

linked_list.add_after("Coach", "Mulberry", "90,000,000")
linked_list.display()

linked_list.remove_link("Chanel")
linked_list.display()

linked_list.remove_link("Coach")
linked_list.display()
```

Output:
```
Louis Vuitton: 10,000,000 Sold
Chanel: 100,000,000 Sold
Prada: 1,000,000 Sold
Tods: 500,000,000 Sold

Louis Vuitton: 10,000,000 Sold
Chanel: 100,000,000 Sold
Coach: 10,000,000 Sold
Prada: 1,000,000 Sold
Tods: 500,000,000 Sold

Louis Vuitton: 10,000,000 Sold
Chanel: 100,000,000 Sold
Coach: 10,000,000 Sold
Mulberry: 90,000,000 Sold
Prada: 1,000,000 Sold
Tods: 500,000,000 Sold

Louis Vuitton: 10,000,000 Sold
Coach: 10,000,000 Sold
Mulberry: 90,000,000 Sold
Prada: 1,000,000 Sold
Tods: 500,000,000 Sold

Louis Vuitton: 10,000,000 Sold
Mulberry: 90,000,000 Sold
Prada

: 1,000,000 Sold
Tods: 500,000,000 Sold
```

I hope this helps! Let me know if you have any further questions.
