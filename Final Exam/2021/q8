The following is a simplified implementation of an undirected graph using the concept of
adjacent matrix.

public class GraphMatrix {
  int vertex;
  boolean edges[][];

  public GraphMatrix(int v) {
    this.vertex = v;
    edges = new boolean[v][v];
  }

  public void addEdge(int from, int to) {
  edges[from][to]=true;
    edges[to][from]=true;
  }

public void print{} {
  System.out.println("Print the graph:");
  for (int i=0; i<vertex; i++) {
    System.out.print(i+"->);
    for(int j = 0; j <vertex; j++) {
      if(edges[i][j]) {System.out.print(j+" ");}
    }
     System.out.printIn("End of the graph:");
    }
  }
}

There is a missing statement in line 12. Write the statement.

There is a mistake in the print method. Identify the line number of the mistake.
line 19, for(int j = 0; j <vertex; j++)

There is an mysterious algorithm defined as follow. This algorithm reads a graph G and a
vertex v in the graph, and produce a tree T. Identify the name of this algorithm.

Mark vertex v as visited.
for each of vâ€™s outgoing edges, e = (v, w) do
if vertex w has not been visited then
Record edge e as the discovery edge for vertex w.
Recursively call back itself with graph G and vertex w.

A graph shown in Figure 4 is sent to the algorithm in 5(b) to process. If the root of the tree
formed is 0, identify:
The parent of 5.
The sibling of 3.
The child of 6.
The last vertex being marked as visited.


                         0
                       /
                 2 -- 1 
                    /  \
                  3     \    4 
                 /       \ /
                7 -- 5 -- 6

==============================================================
Apologies for the previous incomplete response. Here are the complete answers in Java:

1. The missing statement in line 12 should be:
   ```java
   this.edges[to][from] = true;
   ```

2. The mistake in the print method is on line 19, where it should be:
   ```java
   for (int j = 0; j < vertex; j++)
   ```

3. The algorithm described in 5(b) is known as Depth-First Search (DFS). It is used to traverse or search a graph by exploring as far as possible along each branch before backtracking.

4. For the given graph with the root as vertex 0, the answers are:

   - The parent of 5: Vertex 1
   - The sibling of 3: Vertex 4
   - The child of 6: No child (leaf node)
   - The last vertex being marked as visited: Vertex 6

