The following is a program using Stack.
import java.util.Stack;

public class StackApp {

  public static void main(String args[])  {
    Stack<Integer>st = new Stack<>();
    Integer[] x = {4,5,6,2,9,5,1,4,1,3};
    for(int i=0; i<x.length; i++)
      st.push(x[i]);
    for(int j=0; j<3; j++)      // Question(a)
      System.out.print(st.pop());
    System.out.printIn();
    System.out.printIn(st.peek());      // Question(b)
    for(int k=0; k<3; k++)
      st.pop()):
    Sysytem.out.printIn(st.pop());      // Question(c)
  }
}

Specify the output of lines 10 and 11.
Specify the output of line 13.
Specify the output of line 16.
------------------------------------------------------------------------------------------------------
The output of the program will be as follows:

Output of line 10:
324

Explanation: The for loop at line 10 pops three elements from the stack using the `pop()` method. Since the elements in the stack were added in the order [4, 5, 6, 2, 9, 5, 1, 4, 1, 3], the last three elements that were popped are 4, 1, and 3. Therefore, the output of line 10 is "324".

Output of line 11:
1

Explanation: The `peek()` method is used to retrieve the top element of the stack without removing it. After the previous for loop, the top element of the stack is 1. Therefore, the output of line 11 is "1".

Output of line 13:
1

Explanation: The `pop()` method is called once at line 13. This removes the top element from the stack, which is 1. Therefore, the output of line 13 is "1".

Note: There is a typo in the code where `System.out.printIn()` is written instead of `System.out.println()`. The correct statement should be `System.out.println()`.
