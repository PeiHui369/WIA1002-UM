
You are asked to sort a list of sales data, which consisting of Region, Sales Representative Name and Sales Amount. You need to create two classes, SalesList and SortSalesList 
In SalesListyou need to declare the three relevant variables, code the default no-arg constructor and constructor whish defines three variables, and the toString() method
that structure the display of the output.
(2 marks)
 
In SortSalesList, you are required to use Comparable to:
a)	Sort Region data using Selection Sort in descending order.
b)	Sort Sales Amount using Insertion Sort in ascending order.
c) Sort Sales Representative Name using Bubble Sort in ascending order.

Then, write a main method which calls the relevant methods to display the sorting results.
The original data and sample output
 

or1g1na1 Data:
As1a	450 AhMad
Europe	518 Hen1sh
Europe	650 Banny
Greenland	208 Ain
Asia	390 Ali
Greenland	670 Ben
Asia 790 Lee

Sorting Result on Reg1on using SelectionSort:
Greenland	208 Ain	 
Greenland	670 Ben
Europe	659 Banny
Europe	518 Hemish
Asia 390 Ali
Asia	450 Ahmad
Asia	790 Lee

Sorting Result on Sales Â«s1ng Insert1onSort:
Greenland	200 Aln
As1a	390 Ali
Asia 450 Ahmad
Erope	518 Hemish
Europe	650 Banny
Greenland	670 Ben
As1a	790 Lee

Sorting Result on salesRep usIng Bubb1eSort:
Asia 450 Ahmad
Greenland	200	Ain
Asia	390	Ali
Europe	650	Banny
Greenland	670	Ben
Europe	518	Hemish
Asia	798	Lee	
Rajah 2 /FlgUre 2
==========================================================================================================================
Here's the implementation of the SalesList and SortSalesList classes, along with the main method that calls the relevant sorting methods and displays the sorting results:

```java
import java.util.Arrays;

public class SalesList {
    private String region;
    private String salesRepName;
    private int salesAmount;

    public SalesList(String region, String salesRepName, int salesAmount) {
        this.region = region;
        this.salesRepName = salesRepName;
        this.salesAmount = salesAmount;
    }

    public String getRegion() {
        return region;
    }

    public String getSalesRepName() {
        return salesRepName;
    }

    public int getSalesAmount() {
        return salesAmount;
    }

    @Override
    public String toString() {
        return region + "\t" + salesAmount + "\t" + salesRepName;
    }
}

public class SortSalesList {
    public static void selectionSortByRegion(SalesList[] sales) {
        int n = sales.length;
        for (int i = 0; i < n - 1; i++) {
            int maxIndex = i;
            for (int j = i + 1; j < n; j++) {
                if (sales[j].getRegion().compareTo(sales[maxIndex].getRegion()) > 0) {
                    maxIndex = j;
                }
            }
            SalesList temp = sales[maxIndex];
            sales[maxIndex] = sales[i];
            sales[i] = temp;
        }
    }

    public static void insertionSortBySalesAmount(SalesList[] sales) {
        int n = sales.length;
        for (int i = 1; i < n; i++) {
            SalesList key = sales[i];
            int j = i - 1;
            while (j >= 0 && sales[j].getSalesAmount() > key.getSalesAmount()) {
                sales[j + 1] = sales[j];
                j--;
            }
            sales[j + 1] = key;
        }
    }

    public static void bubbleSortBySalesRepName(SalesList[] sales) {
        int n = sales.length;
        for (int i = 0; i < n - 1; i++) {
            for (int j = 0; j < n - i - 1; j++) {
                if (sales[j].getSalesRepName().compareTo(sales[j + 1].getSalesRepName()) > 0) {
                    SalesList temp = sales[j];
                    sales[j] = sales[j + 1];
                    sales[j + 1] = temp;
                }
            }
        }
    }

    public static void main(String[] args) {
        SalesList[] sales = new SalesList[7];
        sales[0] = new SalesList("Asia", "Ahmad", 450);
        sales[1] = new SalesList("Europe", "Henish", 518);
        sales[2] = new SalesList("Europe", "Banny", 650);
        sales[3] = new SalesList("Greenland", "Ain", 208);
        sales[4] = new SalesList("Asia", "Ali", 390);
        sales[5] = new SalesList("Greenland", "Ben", 670);
        sales[6] = new SalesList("Asia", "Lee", 790);

        System.out.println("Original Data:");
        for (SalesList sale : sales) {
            System.out.println(sale);
        }

        System.out.println("\nSorting Result on Region using Selection Sort:");
        selectionSortByRegion(sales);
        for (SalesList sale : sales) {


            System.out.println(sale);
        }

        System.out.println("\nSorting Result on Sales using Insertion Sort:");
        insertionSortBySalesAmount(sales);
        for (SalesList sale : sales) {
            System.out.println(sale);
        }

        System.out.println("\nSorting Result on salesRep using Bubble Sort:");
        bubbleSortBySalesRepName(sales);
        for (SalesList sale : sales) {
            System.out.println(sale);
        }
    }
}
```

The `SalesList` class represents a single sales entry, containing the region, sales representative name, and sales amount. The `SortSalesList` class contains the sorting methods `selectionSortByRegion()`, `insertionSortBySalesAmount()`, and `bubbleSortBySalesRepName()` that perform the sorting based on the specified fields. The main method creates an array of `SalesList` objects, populates it with data, and then calls the sorting methods to display the sorting results.
